##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#
##server {
##	listen 80 default_server;
##	listen [::]:80 default_server;

	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

##	root /var/www/html;

	# Add index.php to the list if you are using PHP
##	index index.html;

##	server_name test1.yangliu.com;

##	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
##		try_files $uri $uri/ =404;
##	}

	# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
	#
	#location ~ \.php$ {
	#	include snippets/fastcgi-php.conf;
	#
	#	# With php7.0-cgi alone:
	#	fastcgi_pass 127.0.0.1:9000;
	#	# With php7.0-fpm:
	#	fastcgi_pass unix:/run/php/php7.0-fpm.sock;
	#}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}
##}


# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
upstream django {
	server 127.0.0.1:8001; # for a web port socket (we'll use this first)
}
server {
	listen 80;
	listen [::]:80;

	server_name test.yangliu.com;

#       root /var/www/html/;
#       index index.html;

    #配置Nginx动静分离，定义的静态页面直接从Nginx发布目录读取。
    location ~ .*\.(html|htm|gif|jpg|jpeg|bmp|png|ico|txt|js|css|woff2|woff|ttf)$ {
            root /var/www/html/;
            index index.html;
            #expires定义用户浏览器缓存的时间为7天，如果静态页面不常更新，可以设置更长，这样可以节省>带宽和缓解服务器的压力
            expires      7d;
    }

    location ~ ^/$ {
            root /var/www/html/;
    }

	location / {
		uwsgi_pass django;
		include /etc/nginx/uwsgi_params;
#		try_files $uri $uri/ =404;
	}
}
